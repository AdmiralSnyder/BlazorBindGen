@page "/"

@using BlazorBindGen
@using static BlazorBindGen.BindGen
@inject IJSRuntime runtime

<button class="btn btn-primary" id="mbtn" @onclick="Heavy">Draw</button><br />
<canvas id="myCanvas" width="400" height="400"></canvas>


@code{
	JWindow win;
	protected override async Task OnInitializedAsync()
	{
		await base.OnInitializedAsync();
		await Init(runtime);
		win = Window;
	}
	async Task Heavy()
	{
		/*
		var c = document.getElementById("myCanvas");
		var ctx = c.getContext("2d");
		var grd = ctx.createRadialGradient(75, 50, 5, 90, 60, 100);
		grd.addColorStop(0, "red");
		grd.addColorStop(1, "white");
		ctx.fillStyle = grd;
		ctx.fillRect(10, 10, 150, 80);
		*/
		var canvas = win.PropRef("document").FuncRef("getElementById", "myCanvas");
		var ctx=canvas.FuncRef("getContext","2d");
		var grad = ctx.FuncRef("createLinearGradient", 0,0,400,0);
		grad.FuncVoid("addColorStop", 0, "red");
		grad.FuncVoid("addColorStop", 1, "green");
		ctx.SetPropRef("fillStyle",grad);
		ctx.FuncVoid("fillRect", 10, 10, 400, 400);

		//wip 
		try
		{
			var res =await win.FuncRefAwaitAsync("fetch", "http://www.google.com");
		}
		catch(Exception e)
		{
			Console.WriteLine(e.Message);
		}
	}
}