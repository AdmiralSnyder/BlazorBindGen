@page "/"

@using BlazorBindGen
@using static BlazorBindGen.BindGen
@using JSCallBack=System.Action<BlazorBindGen.JObjPtr[]>;

@inject IJSRuntime runtime
<div @ref="canvasRef"></div>
<input type="text" class="form-controls" @bind="predictText" placeholder="write review here " />
<button class="btn btn-primary" id="mbtn" @onclick="Predict">Sentiment</button><br />

@code
{
	JWindow win;
	public JObjPtr sentiment;
	string predictText;
	ElementReference canvasRef;
	protected override async Task OnInitializedAsync()
	{
		await base.OnInitializedAsync();
		await Init(runtime);
		win = Window;
		//await Heavy();
		await P5Task();
	}
	async Task P5Task()
	{
		await Import("https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.3.1/p5.js");
		var p5 = win.Construct("p5",null,canvasRef);
		p5.CallVoid("createCanvas",800,600);
		p5.CallVoid("background",0,120,0,255);

	}
	
	async Task Heavy()
	{
		await Import("https://unpkg.com/ml5@latest/dist/ml5.min.js");
		Console.Clear();
		var ml5 = win["ml5"];
		//const sentiment = ml5.sentiment('movieReviews', modelReady);
		sentiment=ml5.CallRef("sentiment","movieReviews",(JSCallBack)OnModelLoaded);
	}
	
	void Predict()
	{
		var v=sentiment.Call<Score>("predict", predictText);
		Console.WriteLine(v.score);
	}
	
	void OnModelLoaded(params JObjPtr[] args)
	{
		Console.WriteLine("Model Loaded: "+args.Length);
	}
	record Score(double score);

}
	
